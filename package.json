{
  "name": "agnes",
  "private": true,
  "scripts": {
    "build": "tsc",
    "dev": "tsx src/server.ts --port 7777",
    "dev:watch": "nodemon --watch src --ext ts,json --exec 'tsx src/server.ts --port 7777'",
    "start": "node dist/server.js",
    "test": "vitest",
    "test:all": "vitest run",
    "test:client": "vitest run src/test/ai-client.test.ts",
    "test:agents": "vitest run src/test/agents/",
    "test:server": "vitest run src/test/server.test.ts",
    "test:config": "vitest run src/test/server-config.test.ts",
    "test:spec": "vitest run src/test/a2a-spec.test.ts",
    "client:demo": "tsx src/clients/run-client.ts",
    "docker:build": "docker build -t agnes-server .",
    "docker:run": "docker run --rm --name agnes-server-container -p 7777:7777 --env-file .env agnes-server",
    "docker:stop": "docker stop agnes-server-container || true",
    "heroku:push": "env-cmd -f .env.heroku sh -c 'heroku container:login && heroku stack:set container --app ${HEROKU_APP_NAME} && heroku container:push web --app ${HEROKU_APP_NAME}'",
    "heroku:release": "env-cmd -f .env.heroku sh -c 'heroku container:release web --app ${HEROKU_APP_NAME}'",
    "heroku:config": "env-cmd -f .env.heroku sh -c 'heroku config:set BASE_URL=${BASE_URL} --app ${HEROKU_APP_NAME}'",
    "heroku:deploy": "npm run build && npm run heroku:config && npm run heroku:push && npm run heroku:release"
  },
  "devDependencies": {
    "@types/node": "^20.11.30",
    "@types/supertest": "^6.0.3",
    "@vitest/coverage-v8": "^3.1.2",
    "axios": "^1.6.8",
    "c8": "^10.1.3",
    "dotenv": "^16.5.0",
    "dotenv-cli": "^7.4.2",
    "env-cmd": "^10.1.0",
    "nodemon": "^3.1.0",
    "supertest": "^7.1.0",
    "tsup": "^8.4.0",
    "tsx": "^4.19.4",
    "typescript": "^5.8.3",
    "vitest": "^3.1.2"
  },
  "dependencies": {
    "openai": "^4.97.0"
  }
}
